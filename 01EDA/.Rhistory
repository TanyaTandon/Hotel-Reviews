#replace prices characters as numeric
steak$`Chuck-Price` <- as.numeric(sub("%","",steak$`Chuck-Price`))
steak$`PortHse-Price` <- as.numeric(sub("%","", steak$`PortHse-Price`))
steak$`RibEye-Price` <- as.numeric(sub("%","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price` <- as.numeric(sub("$","",steak$`Chuck-Price`))
steak$`PortHse-Price` <- as.numeric(sub("$","", steak$`PortHse-Price`))
steak$`RibEye-Price` <- as.numeric(sub("$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
#steak$`Chuck-Price` <- as.numeric(sub("$","",steak$`Chuck-Price`))
#steak$`PortHse-Price` <- as.numeric(sub("$","", steak$`PortHse-Price`))
#steak$`RibEye-Price` <- as.numeric(sub("$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price` <- as.numeric(sub("$","",steak$`Chuck-Price`))
#steak$`PortHse-Price` <- as.numeric(sub("$","", steak$`PortHse-Price`))
#steak$`RibEye-Price` <- as.numeric(sub("$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price2` <- as.numeric(sub("$","",steak$`Chuck-Price`))
#steak$`PortHse-Price` <- as.numeric(sub("$","", steak$`PortHse-Price`))
#steak$`RibEye-Price` <- as.numeric(sub("$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price2` <- as.numeric(trim(sub("$","",steak$`Chuck-Price`)))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price2` <- as.numeric(trimws(sub("$","",steak$`Chuck-Price`)))
#steak$`PortHse-Price` <- as.numeric(sub("$","", steak$`PortHse-Price`))
#steak$`RibEye-Price` <- as.numeric(sub("$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price2`<- trimws(sub("$","",steak$`Chuck-Price`))
#steak$`Chuck-Price2` <- as.numeric(trimws(sub("$","",steak$`Chuck-Price`)))
#steak$`PortHse-Price` <- as.numeric(sub("$","", steak$`PortHse-Price`))
#steak$`RibEye-Price` <- as.numeric(sub("$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price2`<- sub("$","",steak$`Chuck-Price`)
#steak$`Chuck-Price2` <- as.numeric(trimws(sub("$","",steak$`Chuck-Price`)))
#steak$`PortHse-Price` <- as.numeric(sub("$","", steak$`PortHse-Price`))
#steak$`RibEye-Price` <- as.numeric(sub("$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price2`<- sub("\$","",steak$`Chuck-Price`)
View(steak)
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price2`<- sub("$","",steak$`Chuck-Price`)
#steak$`Chuck-Price2` <- as.numeric(trimws(sub("$","",steak$`Chuck-Price`)))
#steak$`PortHse-Price` <- as.numeric(sub("$","", steak$`PortHse-Price`))
#steak$`RibEye-Price` <- as.numeric(sub("$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price2`<- sub("\\$","",steak$`Chuck-Price`)
#steak$`Chuck-Price2` <- as.numeric(trimws(sub("$","",steak$`Chuck-Price`)))
#steak$`PortHse-Price` <- as.numeric(sub("$","", steak$`PortHse-Price`))
#steak$`RibEye-Price` <- as.numeric(sub("$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price2`<- sub("\\$","",steak$`Chuck-Price`)
steak$`Chuck-Price2` <- as.numeric(trimws(sub("\\$","",steak$`Chuck-Price`)))
steak$`PortHse-Price` <- as.numeric(sub("\\$","", steak$`PortHse-Price`))
steak$`RibEye-Price` <- as.numeric(sub("\\$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price2` <- as.numeric(trimws(sub("\\$","",steak$`Chuck-Price`)))
steak$`PortHse-Price` <- as.numeric(sub("\\$","", steak$`PortHse-Price`))
steak$`RibEye-Price` <- as.numeric(sub("\\$","",steak$`RibEye-Price`))
#read in steak data
steak <- read_csv("Steak+Prices.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price` <- as.numeric(trimws(sub("\\$","",steak$`Chuck-Price`)))
steak$`PortHse-Price` <- as.numeric(sub("\\$","", steak$`PortHse-Price`))
steak$`RibEye-Price` <- as.numeric(sub("\\$","",steak$`RibEye-Price`))
elast_chuck<-lm(Chuck-Qty~Chuck-Price,steak)
elast_chuck<-lm(`Chuck-Qty`~`Chuck-Price`,steak)
elast_chuck<-lm(`Chuck-Qty`~`Chuck-Price`,steak)
summary(elast_chuck)
elast_chuck<-lm(`Chuck-Qty`~`Chuck-Price`,steak)
summary(elast_chuck)
elast_port<-lm(`PortHse-Qty`~`PortHse-Price`,steak)
summary(elast_port)
elast_rib<-lm(`RibEye-Qty`~`RibEye-Price`,steak)
summary(elast_rib)
-58.10 *(mean(steak$`Chuck-Price`/mean(steak$`Chuck-Qty`)))
-58.10 *(mean(steak$`Chuck-Qty`/mean(steak$`Chuck-Price`)))
#Chuck
-58.10 *(mean(steak$`Chuck-Price`/mean(steak$`Chuck-Qty`)))
#Porter
--28.08 *(mean(steak$`PortHse-Price`/mean(steak$`PortHse-Qty`)))
#Rib-Eye
-22.58 *(mean(steak$`RibEye-Price`/mean(steak$`RibEye-Qty`)))
knitr::opts_chunk$set(echo = TRUE)
#read in steak data
steak <- read_csv("Smoking-cancer.csv")
View(steak)
#replace prices characters as numeric
steak$`Chuck-Price` <- as.numeric(trimws(sub("\\$","",steak$`Chuck-Price`)))
#read in steak data
smoking <- read_csv("Smoking-cancer.csv")
View(smoking)
#replace prices characters as numeric
steak$`Chuck-Price` <- as.numeric(trimws(sub("\\$","",steak$`Chuck-Price`)))
#Bladder
plot(smoking$Bladder,smoking$Smoke,xlab="Number of Deaths from Bladder Cancer",ylab="Number of Cigarettes Smoked",pch=16)
#Lung
plot(smoking$Lung,smoking$Smoke,xlab="Number of Deaths from Lung Cancer",ylab="Number of Cigarettes Smoked",pch=16)
#Bladder
plot(smoking$Kidney,smoking$Smoke,xlab="Number of Deaths from Kidney Cancer",ylab="Number of Cigarettes Smoked",pch=16)
#Bladder
plot(smoking$Leukemia,smoking$Smoke,xlab="Number of Deaths from Leukemia",ylab="Number of Cigarettes Smoked",pch=16)
cor.test(smoking$Bladder, smoking$Smoke)
cor.test(smoking$Bladder, smoking$Smoke)
cor.test(smoking$Lung, smoking$Smoke)
cor.test(smoking$Kidney, smoking$Smoke)
cor.test(smoking$Leukemia, smoking$Smoke)
knitr::opts_chunk$set(echo = TRUE)
elast_chuck<-lm(ln(`Chuck-Qty`)~ln(`Chuck-Price`),steak)
#read in steak data
steak <- read_csv("Steak+Prices.csv")
#read in steak data
steak <- read_csv("Steak+Prices.csv")
#read in steak data
steak <- read_csv("Steak+Prices.csv")
knitr::opts_chunk$set(echo = TRUE)
#read in steak data
steak <- read_csv("Steak+Prices.csv")
#read in steak data
install.packages("hms")
steak <- read_csv("Steak+Prices.csv")
#read in steak data
install.packages("hms")
library(hms)
steak <- read_csv("Steak+Prices.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
Ncc_Dec_2016 <- 6174*(1+.05)^12
Ncc_Dec_2017 <- Ncc_Dec_2016*(1+.04)^12
Ncc_Dec_2018 <- Ncc_Dec_2017*(1+.01)^12
num_of_comm = [] #list of number of communities advertising on Zillow each month
communities = 6,174
i = 1
#2016
while i <= 12:
communities = communities*(1+.06)
num_of_comm.append(communities)
i += 1
#2017
i = 1
while i <= 12:
communities = communities*(1+.04)
num_of_comm.append(communities)
i += 1
#2018
i = 1
while i <= 12:
communities = communities*(1+.02)
num_of_comm.append(communities)
i += 1
num_of_comm
num_of_comm <- [] #list of number of communities advertising on Zillow each month
communities <- 6,174
i <- 1
#2016
while i <= 12:
communities <- communities*(1+.06)
num_of_comm.append(communities)
i <- i + 1
#2017
i = 1
while i <= 12:
communities <- communities*(1+.04)
num_of_comm.append(communities)
i <- i + 1
#2018
i = 1
while i <= 12:
communities <- communities*(1+.02)
num_of_comm.append(communities)
i <- i + 1
num_of_comm
num_of_comm
num_of_comm <- [] #list of number of communities advertising on Zillow each month
communities <- 6,174
i <- 1
#2016
while i <= 12:
communities <- communities*(1+.06)
num_of_comm.append(communities)
i <- i + 1
#2017
i = 1
while i <= 12:
communities <- communities*(1+.04)
num_of_comm.append(communities)
i <- i + 1
#2018
i = 1
while i <= 12:
communities <- communities*(1+.02)
num_of_comm.append(communities)
i <- i + 1
num_of_comm
NccPerLeadDec2016 <- 6174*(1+.06)^12
NccPerLeadDec2017 <- NccPerLeadDec2016*(1+.04)^12
NccPerLeadDec2018 <- NccPerLeadDec2017*(1+.02)^12
NccPerCommDec2016 <- 6174*(1+(.06*.9))^12
NccPerCommDec2017 <- NccPerCommDec2016*(1+(.04*.9))^12
NccPerCommDec2018 <- NccPerCommDec2017**1+(.02*.9))^12
NccPerLeadDec2016 <- 6174*(1+.06)^12
NccPerLeadDec2017 <- NccPerLeadDec2016*(1+.04)^12
NccPerLeadDec2018 <- NccPerLeadDec2017*(1+.02)^12
NccPerCommDec2016 <- 6174*(1+(.06*.9))^12
NccPerCommDec2017 <- NccPerCommDec2016*(1+(.04*.9))^12
NccPerCommDec2018 <- NccPerCommDec2017**1+(.02*.9))^12
NccPerLeadDec2016 <- 6174*(1+.06)^12
NccPerLeadDec2017 <- NccPerLeadDec2016*(1+.04)^12
NccPerLeadDec2018 <- NccPerLeadDec2017*(1+.02)^12
NccPerCommDec2016 <- 6174*(1+(.06*.9))^12
NccPerCommDec2017 <- NccPerCommDec2016*(1+(.04*.9))^12
NccPerCommDec2018 <- NccPerCommDec2017*(1+(.02*.9))^12
data(iris)
head(iris)
unique(iris$Species)
?kmeans
View(USArrests)
str(USArrests)
kmeans(USArrests,3)
USArrests$stand_murder <- (USArrests$Murder - mean(USArrests$Murder))/ sd(USArrests$Murder)
View(USArrests)
USArrests$stand_murder <- (USArrests$Murder - mean(USArrests$Murder))/ sd(USArrests$Murder)
USArrests$stand_assault <- (USArrests$Assault - mean(USArrests$Assault))/ sd(USArrests$Assault)
USArrests$stand_urbanpop <- (USArrests$UrbanPop- mean(USArrests$UrbanPop))/ sd(USArrests$UrbanPop)
USArrests$stand_rape <- (USArrests$Rape - mean(USArrests$Rape))/ sd(USArrests$Rape)
arrests2 <- USArrests[,5:8]
kmeans(USArrests,3)
data("USArrests")
#unstandardized
unstand <- kmeans(USArrests,3)
USArrests$stand_murder <- (USArrests$Murder - mean(USArrests$Murder))/ sd(USArrests$Murder)
USArrests$stand_assault <- (USArrests$Assault - mean(USArrests$Assault))/ sd(USArrests$Assault)
USArrests$stand_urbanpop <- (USArrests$UrbanPop- mean(USArrests$UrbanPop))/ sd(USArrests$UrbanPop)
USArrests$stand_rape <- (USArrests$Rape - mean(USArrests$Rape))/ sd(USArrests$Rape)
arrests2 <- USArrests[,5:8]
stand <- kmeans(USArrests,3)
unstand$cluster
unstand$totss
stand$totss
unstand$size
stand$size
str(stand)
3/16
3+8+4
3/15
sets = apriori(tv, paramet = list(target = "freq", support = .1, minlen = 2, maxlen = 4))
# Chunk 13
inspect(head(sort(sets), n=50))
# Chunk 14
plot(head(sort(sets), n=100, method = "graph"))
plot(sets, method = "graph")
# Chunk 15
d <- dissimilarity(tv, method = "jaccard" , which = "items")
plot(hclust(d, method = "average"), cex = .6)
setwd("~/Class Notes/Data Mining/Assignment 3")
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE)
# Chunk 2
library(proxy)
x = matrix(c(1,1,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0,1,0,1,0), byrow = T, ncol = 7, dimnames = list(LETTERS[1:3]))
simil(x, method = "Jaccard")
# Chunk 3
A = matrix(c(3,2,1,3,2,1),nrow=2)
A
simil(A,"cosine")
# Chunk 4
B = matrix(c(1,2,2,4,3,6),nrow=2)
B
simil(B,"cosine")
# Chunk 5
C = matrix(c(5,1,0,6,4,2),nrow=2)
C
simil(C,"cosine")
# Chunk 6
D = matrix(c(0,0,1,0,1,1,0,0,1,0,1,0),nrow=2)
D
simil(D,"cosine")
# Chunk 7
sum = 0
for (i in 1:100){
sum <- sum + (floor(100/i))
}
sum
# Chunk 8
baskets <- rep(0, 100)
for (i in 1:100){
for (b in 1:100){
if (b %% i == 0){
baskets[b] <- baskets[b] + 1
}
}
}
baskets
# Chunk 9
count1 = 0
for (b in 1:100) {
if (b %%4==0 & b %% 3 == 0 & b %%2 == 0) {
count1 <- count1 + 1
}
}
count1
count_all = 0
for (b in 1:100) {
if (b %%4==0 & b %% 3 == 0 & b %%2 == 0 & b %% 5 ==0) {
count_all <- count_all + 1
}
}
count_all
count_all/count1
# Chunk 10
library(arules)
library(arulesViz)
tv <- read.transactions("tv.dat")
# Chunk 11
sort(itemFrequency(tv))
# Chunk 12
sets = apriori(tv, paramet = list(target = "freq", support = .1, minlen = 2, maxlen = 4))
sets
inspect(head(sort(sets), n=50))
inspect(head(sort(subset(sets,subset = items %pin% "JimmyKimmel")),10))
rules <- apriori(tv,parameter = list(support=.1,conf=.5))
inspect(head(sort(subset(rules,subset= lhs %ain% "JimmyKimmel")),10))
setwd("~/")
setwd("~/Class Notes/Predictive Analytics 2/Project/MSiA420ProjectTeamCL/01EDA")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
## Set working directory
setwd("~/Class Notes/Predictive Analytics 2/Project/MSiA420ProjectTeamCL/01EDA")
library(tidyverse)
library(dplyr)
# Chunk 3
hotel_reviews <- read.csv("../00Data/Hotel_Reviews_v2.csv")
head(hotel_reviews)
# Chunk 4
table(length(unique(hotel_reviews$Hotel_Name))) #1,492 hotel names
check_name <- group_by(hotel_reviews, Hotel_Name)
table(length(unique(check_name$Hotel_Address))) #1,493 Addresses - doesn't match
check <- hotel_reviews %>%
group_by(Hotel_Address, Hotel_Name) %>%
tally()
check <- check[order(check$Hotel_Name, check$Hotel_Address),]
table(duplicated(check$Hotel_Name))
duplicated(check$Hotel_Name)
check[c(761,762),]
#Two hotels have the same name - need to use address as unique identifier
# Chunk 5
check <- hotel_reviews %>%
group_by(lat, lng, Hotel_Address) %>%
tally()
table(duplicated(check$lat, check$lng))
check$dup <- duplicated(check$lat, check$lng)
check2 <- filter(check, dup==TRUE)
head(check2)
# Chunk 6
library(stringr)
hotel_reviews$Hotel_Country <- word(hotel_reviews$Hotel_Address,-1)
hotel_reviews$Hotel_City <- word(hotel_reviews$Hotel_Address,-2)
look <- filter(hotel_reviews, Hotel_City == "United")
head(look$Hotel_Address)
look$city <- word(look$Hotel_Address,-5)
table(look$city) #all of these are london
hotel_reviews$Hotel_Country[hotel_reviews$Hotel_Country == "Kingdom"] <- "United Kingdom"
hotel_reviews$Hotel_City[hotel_reviews$Hotel_City == "United"] <- "London"
table(hotel_reviews$Hotel_Country)
table(hotel_reviews$Hotel_City)
prop.table(table(hotel_reviews$Hotel_Country))
prop.table(table(hotel_reviews$Hotel_City))
library(lubridate)
#library(plyr)
hotel_reviews$Review_Date <- str_replace_all(hotel_reviews$Review_Date, '-','/')
hotel_reviews$Review_Date2 = mdy(hotel_reviews$Review_Date)
#For each hotel need to have data by individual hotel with reviews vs date
#keeping variables we need
reshape_data <- hotel_reviews[,c("Hotel_Address", "Review_Date2", "Reviewer_Score")]
summary(hotel_reviews$Review_Date2) # min for all data is 08/4/2015 and max is 08/03/2017
hotel_reviews$days_since_beg <- word(hotel_reviews$days_since_review,1)
hotel_reviews$days_since_beg <- as.numeric(hotel_reviews$days_since_beg)
hotel_reviews$days_since_beg <- (730 - hotel_reviews$days_since_beg)
#foreach hotel :
#  keep hotel
# lm(review ~ days since beg, data = hotel_data)
# keep B1
# or corr(review and days since beg)
# keep corr
# }
get.hotels <- function(x) unique(x$Hotel_Address)
get.hotels(hotel_reviews)
model <- function(x){ +
fit <- lm(Reviewer_Score ~ days_since_beg, data=x) +
data.frame(n=length(x$Reviewer_Score), r2=summary(fit)$r.squared, a=coef(fit)[[1]], b=coef(fit)[[2]]) }
ddply(hotel_reviews, .(Hotel_Address), model)
hotel_reviews %>% group_by(Hotel_Address) %>% do(mod = lm(Reviewer_Score ~ days_since_beg, data=.))
tmp <- hotel_reviews %>% group_by(Hotel_Address) %>% do(mod = lm(Reviewer_Score ~ days_since_beg, data=.))
tmp[mod[1]]
View(tmp)
tmp$mod
tmp$mod$1
tmp$mod[1]
tmp$mod[2]
tmp$mod[1][2]
tmp[tmp$variable == "days_since_beg",]$mod
tmp$mod[2]
coefficients(tmp$mod[2])
tmp$mod[2]$coefficients
tmp$mod[2]$
asdf
View(tmp$mod[2])
tmp$mod[2][2]
tmp$mod[[2]]
tmp$mod[[1]]
tmp$mod[[3]]
tmp$mod[[1]]coefficients()
tmp$mod[[1]]coefficients(days_since_beg)
tmp$mod[[1]]coefficients(1)
tmp$mod[[1]]
coefficients(tmp$mod[1])
coefficients(tmp$mod)
coefficients(tmp)
coefficients(mdo)
coefficients(mod)
tmp$mod[1.1]
tmp$mod[1,1]
tmp$mod[11]
tmp$mod
tmp$mod[11]$coefficients(1,2)
tmp$mod[11]coefficients(1,2)
tmp$mod$coefficients(1,2)
summary(tmp$mod[1])$coefficients[1, 1]
summary(tmp$mod[1])$coefficients[1]
summary(tmp$mod[1])$coefficients[2]
tmp$mod[2][[1]]
tmp$mod[2][[1]][2]
tmp$mod[2][[1]][1]
tmp$mod[2][[1]][1][2]
tmp$mod[2][[1]][[1]]
tmp$mod[2][[1]][[1][2]]
tmp$mod[2][[1]][[1]]
cor(hotel_reviews$Reviewer_Score, hotel_reviews$days_since_beg)
tmp2 <- hotel_reviews %>% group_by(Hotel_Address) %>% do(mod = cor(Reviewer_Score, days_since_beg)
)
tmp2 <- hotel_reviews %>% group_by(Hotel_Address) %>% do(mod = cor(hotel_reviews$Reviewer_Score, hotel_reviews$days_since_beg))
tmp2
tmp2$mod[1]
tmp2$mod[2]
tmp2$mod[3]
tmp2$mod[4]
tmp2 <- hotel_reviews %>% group_by(Hotel_Address) %>% do(mod = cor(Reviewer_Score, days_since_beg, data = .))
hotel_reviews %>%
group_by(Hotel_Address) %>%
summarize(COR=cor(a,b))
hotel_reviews %>%
group_by(Hotel_Address) %>%
summarize(COR=cor(Reviewer_Score,days_since_beg))
corr <- hotel_reviews %>%
group_by(Hotel_Address) %>%
summarize(COR=cor(Reviewer_Score,days_since_beg))
corr
hotel_reviews <- merge(hotel_reviews, corr, by = "Hotel_Address")
head(hotel_reviews)
summary(hotel_reviews$COR)
names(hotel_reviews)
#outputting a csv file with all the locations and dates
weather <- hotel_reviews[, c("Hotel_City", "Review_Date2")]
dim(weather)
weather <- unique(weather)
dim(weather)
l in 1
head(weather)
#outputting a csv file with all the locations and dates
cities_for_weather <- hotel_reviews[, c("Hotel_City", "Review_Date2")]
cities_for_weather <- unique(cities_for_weather)
write.csv(cities_for_weather, "cities_for_weather.csv")
